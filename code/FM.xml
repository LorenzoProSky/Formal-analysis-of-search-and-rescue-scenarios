<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Global declaration
// System features
const int N_ROW = 20;
const int N_COL = 20;
const int N_DRONE = 5;
const int N_FIRST-RESPONDER = 5;
const int N_CIVILIAN = 10;

const int droneNv[N_DRONE] = [];
const int firstResponderTfr[N_FIRST-RESPONDER] = [];
const int civilianTv[N_CIVILIAN] = [];
const int civilianTzr[N_CIVILIAN] = [];

// Variable Declaration
int map[N_ROW][N_COL];
int droneId[N_DRONE];
int firstResponderId[N_FIRST-RESPONDER];
int civilianId[N_CIVILIAN];

// Channel declaration
chan broadcast ready;
urgent chan communication; // Taken  asap by the civilian when not safe and not a victim
urgent chan assistance; // Taken  asap by the civilian when a victim
urgent chan contact;
urgent chan safe;
urgent chan dead;
urgent chan broadcast youAreSafe;  // Broadcast for the case the first-responder saves the victim and a civilian instracted to contact by the dron
                            // If possible to send target messages =&gt; No need for broadcast

// Function declaration</declaration>
	<template>
		<name>Initializer</name>
		<declaration>void setUp() {

}</declaration>
		<location id="id0" x="-561" y="-68">
		</location>
		<location id="id1" x="-425" y="-68">
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-518" y="-93">ready!</label>
			<label kind="assignment" x="-527" y="-59">setUp()</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Drone</name>
		<parameter>const int Id, const int Nv</parameter>
		<declaration>// Function declaration
void patrol() { // Drone moving policy

}

bool areInRange() { // Check if both a civilian and a victim are in range

}

bool isFree() { // Check if the free civilian (not the victim) is not already the target of another drone

}

void giveInstruction() { // Drone decision-making policy
 // Mark the civilian as a zero-responder OR NOT
 // The drone is the one deciding =&gt; It is the one who has to modify the value
}</declaration>
		<location id="id3" x="-2609" y="-476">
		</location>
		<location id="id4" x="-2482" y="-476">
			<committed/>
		</location>
		<location id="id5" x="-2482" y="-331">
			<committed/>
		</location>
		<location id="id6" x="-2609" y="-331">
			<name x="-2720" y="-340">Patrolling</name>
		</location>
		<location id="id7" x="-2142" y="-476">
			<committed/>
		</location>
		<location id="id8" x="-2312" y="-646">
			<committed/>
		</location>
		<init ref="id3"/>
		<transition id="id9">
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="guard" x="-2346" y="-425">!isFree()</label>
			<nail x="-2312" y="-425"/>
		</transition>
		<transition id="id10">
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-2524" y="-595">communication!</label>
			<label kind="assignment" x="-2550" y="-578">giveInstruction()</label>
		</transition>
		<transition id="id11">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="-2227" y="-586">isFree()</label>
		</transition>
		<transition id="id12">
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="guard" x="-2363" y="-501">areInRange()</label>
		</transition>
		<transition id="id13">
			<source ref="id5"/>
			<target ref="id4"/>
		</transition>
		<transition id="id14">
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="assignment" x="-2575" y="-323">patrol()</label>
		</transition>
		<transition id="id15">
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-2669" y="-416">!isInRange()</label>
		</transition>
		<transition id="id16">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-2567" y="-502">ready?</label>
		</transition>
	</template>
	<template>
		<name>First-Responder</name>
		<parameter>const int Id, const int Tfr</parameter>
		<declaration>// Clock declaration
clock x;

// Function declaration
void wandering() { // First-Responder moving policy

}

bool isInRange() {

}

void assistanceFinished() {

}</declaration>
		<location id="id17" x="-1156" y="-442">
			<name x="-1190" y="-476">Wandering</name>
		</location>
		<location id="id18" x="-569" y="-476">
			<name x="-578" y="-510">Assisting</name>
			<label kind="invariant" x="-579" y="-459">x &lt;= Tfr</label>
			<label kind="comments" x="-425" y="-739">More than a single first-responder can be assisting the same victim,
if they start helping them at the exact same time instant
(IRL they could not coordinate well,
since nobody was helping they did not see the others arriving).</label>
		</location>
		<location id="id19" x="-1215" y="-739">
		</location>
		<location id="id20" x="-909" y="-238">
			<name x="-951" y="-280">Contacting</name>
			<label kind="invariant" x="-1045" y="-212">x &lt;= Tfr + getDistance(1) + getDistance(2)</label>
			<label kind="comments" x="-1088" y="-178">contact? is urgent
=&gt; It is taken before the isInRange or not condition</label>
		</location>
		<location id="id21" x="-1054" y="-595">
			<committed/>
		</location>
		<location id="id22" x="-1054" y="-442">
			<committed/>
		</location>
		<location id="id23" x="-85" y="-238">
			<label kind="invariant" x="-229" y="-212">x &lt;= Tfr + getDistance(1) + getDistance(2)</label>
			<label kind="comments" x="-51" y="-391">If the victim dies before the first-responder can finish helping them
=&gt; Finish the assistance at least for the zero-responder</label>
		</location>
		<init ref="id19"/>
		<transition id="id24">
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-1385" y="-629">contact?, assistance!</label>
			<label kind="assignment" x="-1317" y="-612">x = 0</label>
			<nail x="-1249" y="-595"/>
			<nail x="-1249" y="-238"/>
		</transition>
		<transition id="id25">
			<source ref="id23"/>
			<target ref="id21"/>
			<label kind="guard" x="-331" y="-442">x &gt;= Tfr + getDistance(1) + getDistance(2)</label>
			<label kind="synchronisation" x="-170" y="-459">youAreSafe!</label>
			<label kind="assignment" x="-221" y="-425">assistanceFinished(1)</label>
			<nail x="-85" y="-391"/>
			<nail x="-858" y="-391"/>
		</transition>
		<transition id="id26">
			<source ref="id20"/>
			<target ref="id23"/>
			<label kind="guard" x="-663" y="-280">x &lt; Tfr + getDistance(1) + getDistance(2)</label>
			<label kind="synchronisation" x="-518" y="-263">dead?</label>
		</transition>
		<transition id="id27">
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-1020" y="-331">x &gt;= Tfr + getDistance(1) + getDistance(2)</label>
			<label kind="synchronisation" x="-918" y="-348">youAreSafe!</label>
			<label kind="assignment" x="-935" y="-314">assistanceFinished(1,2)</label>
		</transition>
		<transition id="id28">
			<source ref="id18"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-501" y="-782">safe?</label>
			<nail x="-459" y="-476"/>
			<nail x="-459" y="-756"/>
			<nail x="-1054" y="-756"/>
		</transition>
		<transition id="id29">
			<source ref="id22"/>
			<target ref="id21"/>
		</transition>
		<transition id="id30">
			<source ref="id18"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-612" y="-688">dead?</label>
			<nail x="-569" y="-663"/>
			<nail x="-1054" y="-663"/>
		</transition>
		<transition id="id31">
			<source ref="id18"/>
			<target ref="id21"/>
			<label kind="guard" x="-765" y="-620">x &gt;= Tfr</label>
			<label kind="synchronisation" x="-773" y="-603">youAreSafe!</label>
			<label kind="assignment" x="-782" y="-586">assistanceFinished()</label>
			<nail x="-858" y="-595"/>
		</transition>
		<transition id="id32">
			<source ref="id17"/>
			<target ref="id22"/>
			<label kind="assignment" x="-1147" y="-416">wandering()</label>
		</transition>
		<transition id="id33">
			<source ref="id21"/>
			<target ref="id17"/>
			<label kind="guard" x="-1207" y="-518">!isInRange()</label>
		</transition>
		<transition id="id34">
			<source ref="id21"/>
			<target ref="id18"/>
			<label kind="guard" x="-858" y="-518">isInRange()</label>
			<label kind="synchronisation" x="-850" y="-501">assitance!</label>
			<label kind="assignment" x="-841" y="-535">x = 0</label>
			<nail x="-756" y="-476"/>
		</transition>
		<transition id="id35">
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-1173" y="-731">ready?</label>
		</transition>
	</template>
	<template>
		<name>Civilian</name>
		<parameter>const int Id, const int Tv, const int Tzr</parameter>
		<declaration>// Clock declaration
clock x;

// Function declaration
void wandering() { // Civilian moving policy

}

bool amSafe() {

}

void safe() { // Mark the civilian as saved

}

bool amVictim() {

}

void victim() { // Mark the civilian as victim

}

void dead() { // Mark the civilian as dead

}

void inAssistance() { // Mark the civilian as in assistance

}

bool amZeroResponder() {

}

void assistanceFinished() {

}</declaration>
		<location id="id36" x="-2371" y="-119">
		</location>
		<location id="id37" x="-2184" y="-119">
			<committed/>
		</location>
		<location id="id38" x="-2184" y="-280">
			<name x="-2201" y="-314">Safe</name>
		</location>
		<location id="id39" x="-1776" y="-119">
			<committed/>
		</location>
		<location id="id40" x="-1776" y="-280">
			<name x="-1801" y="-314">Victim</name>
			<label kind="invariant" x="-1810" y="-263">x &lt;= Tv</label>
		</location>
		<location id="id41" x="-1428" y="-119">
			<committed/>
		</location>
		<location id="id42" x="-1776" y="-450">
			<name x="-1810" y="-484">Casualty</name>
		</location>
		<location id="id43" x="-2006" y="-280">
		</location>
		<location id="id44" x="-1428" y="-280">
			<committed/>
		</location>
		<location id="id45" x="-1428" y="-442">
			<name x="-1479" y="-476">ZeroResponder</name>
			<label kind="invariant" x="-1521" y="-425">x &lt;= Tzr + getDistance()</label>
		</location>
		<location id="id46" x="-1096" y="-280">
		</location>
		<location id="id47" x="-1649" y="17">
			<committed/>
		</location>
		<location id="id48" x="-1428" y="-646">
			<label kind="comments" x="-1861" y="-637">If the victim dies, the zero-responder finishes
helping themselves and they become safe</label>
		</location>
		<location id="id49" x="-1428" y="17">
			<name x="-1402" y="8">Wandering</name>
		</location>
		<location id="id50" x="-1096" y="-442">
			<name x="-1071" y="-450">Contacting</name>
		</location>
		<init ref="id36"/>
		<transition id="id51">
			<source ref="id50"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-1088" y="-714">youAreSafe?</label>
			<label kind="assignment" x="-1088" y="-697">safe()</label>
			<nail x="-1096" y="-705"/>
			<nail x="-2252" y="-705"/>
			<nail x="-2252" y="-280"/>
		</transition>
		<transition id="id52">
			<source ref="id46"/>
			<target ref="id50"/>
			<label kind="synchronisation" x="-1088" y="-365">contact!</label>
		</transition>
		<transition id="id53">
			<source ref="id47"/>
			<target ref="id37"/>
			<nail x="-2184" y="17"/>
		</transition>
		<transition id="id54">
			<source ref="id49"/>
			<target ref="id47"/>
			<label kind="assignment" x="-1581" y="25">wandering()</label>
		</transition>
		<transition id="id55">
			<source ref="id41"/>
			<target ref="id49"/>
		</transition>
		<transition id="id56">
			<source ref="id48"/>
			<target ref="id38"/>
			<label kind="guard" x="-2167" y="-637">x &gt;= Tzr + getDistance()</label>
			<label kind="assignment" x="-2167" y="-620">safe()</label>
			<nail x="-2184" y="-646"/>
		</transition>
		<transition id="id57">
			<source ref="id45"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="-1419" y="-603">dead?</label>
		</transition>
		<transition id="id58">
			<source ref="id45"/>
			<target ref="id38"/>
			<label kind="guard" x="-2167" y="-552">x &gt;= Tzr + getDistance()</label>
			<label kind="synchronisation" x="-2167" y="-535">youAreSafe!</label>
			<label kind="assignment" x="-2167" y="-518">assistanceFinished(), safe()</label>
			<nail x="-1428" y="-561"/>
			<nail x="-2184" y="-561"/>
		</transition>
		<transition id="id59">
			<source ref="id44"/>
			<target ref="id46"/>
			<label kind="guard" x="-1334" y="-306">!amZeroResponder()</label>
		</transition>
		<transition id="id60">
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="guard" x="-1589" y="-382">amZeroResponder()</label>
			<label kind="synchronisation" x="-1538" y="-365">assistance!</label>
			<label kind="assignment" x="-1487" y="-348">x = 0</label>
		</transition>
		<transition id="id61">
			<source ref="id41"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="-1564" y="-212">communication?</label>
		</transition>
		<transition id="id62">
			<source ref="id43"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-2159" y="-323">youAreSafe?, safe!</label>
			<label kind="assignment" x="-2108" y="-306">safe()</label>
		</transition>
		<transition id="id63">
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="guard" x="-1980" y="-399">x &gt;= Tv</label>
			<label kind="synchronisation" x="-1963" y="-365">dead!</label>
			<label kind="assignment" x="-1972" y="-382">dead()</label>
		</transition>
		<transition id="id64">
			<source ref="id40"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-1929" y="-323">assistance?</label>
			<label kind="assignment" x="-1946" y="-306">inAssistance()</label>
		</transition>
		<transition id="id65">
			<source ref="id40"/>
			<target ref="id42"/>
			<label kind="guard" x="-1759" y="-382">x &gt;= Tv</label>
			<label kind="synchronisation" x="-1759" y="-348">dead!</label>
			<label kind="assignment" x="-1759" y="-365">dead()</label>
		</transition>
		<transition id="id66">
			<source ref="id39"/>
			<target ref="id41"/>
			<label kind="guard" x="-1734" y="-144">!amVictim()</label>
		</transition>
		<transition id="id67">
			<source ref="id39"/>
			<target ref="id40"/>
			<label kind="guard" x="-1869" y="-212">amVictim()</label>
			<label kind="assignment" x="-1912" y="-195">victim(), x = 0</label>
		</transition>
		<transition id="id68">
			<source ref="id37"/>
			<target ref="id39"/>
			<label kind="guard" x="-2150" y="-144">!amSafe()</label>
		</transition>
		<transition id="id69">
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="guard" x="-2261" y="-229">amSafe()</label>
			<label kind="assignment" x="-2252" y="-212">safe()</label>
		</transition>
		<transition id="id70">
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-2303" y="-144">ready?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
DroneProcess = Drone(droneId, droneNv);
FirstResponderProcess = FirstResponder(firstResponderId, firstResponderTfr);
CivilianProcess = Civillian(civilianId, civilianTv, civilianTzr);

// List one or more processes to be composed into a system.
system DroneProcess, FirstResponderProcess, CivilianProcess;
system 
</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
